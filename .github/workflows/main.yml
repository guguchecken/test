# This is a basic workflow to help you get started with Actions

name: Test CI
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  pull_request_target:
    types: [opened, synchronize]
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test-name:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Get Change Paths

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v3.2.1
        with:
          # The Go version to download (if necessary) and use. Supports semver spec and ranges.
          go-version: '1.18'
      - name: Get PR Changed Paths
        uses: guguducken/change-paths-action@master
        id: ut-pr
        with:
          github-token: ${{ secrets.ACTION_TOKEN }}
          ignore: "src/ut/,/,test/,.github/"
      - uses: actions/checkout@v2
        with:
          fetch-depth: '3'
          path: ./test
          repository: ${{ steps.ut-pr.outputs.resource }}
          ref: ${{ steps.ut-pr.outputs.branch }}
      - name: Set Variables
        run: |
          echo "raw_ut_coverage='ut_coverage.raw'" >> $GITHUB_ENV
      - name: UT Code Coverage
        if: ${{ steps.ut-pr.outputs.paths }} != ''
        run: |
          cd ${GITHUB_WORKSPACE}/test
          go test -v -cover ${{ steps.ut-pr.outputs.paths }} | grep -a -P "(?m)(?<=ok|\?){1}.*(?=%|])" | tee ${{ env.raw_ut_coverage}}
      - name: Coverage Calculate
        if: ${{ steps.ut-pr.outputs.paths }} != ''
        run: |
          cd ${GITHUB_WORKSPACE}/test
          awk -F '[ %\t]+' '{if($1=="ok"){if($5 == "[no"){print "warning: please move tested code file to "$2;} else if($5 < 60) {print "error: the code coverage of "$2" is ",$5,"% is below 60%";} else {print "The code coverage of "$1" is "$5"%, this is up to standard"}} else if($1 == "?"){print "error: There are no test files in this path -- "$2;}}' ${{ env.raw_ut_coverage}}
          rm -rf ${{ env.raw_ut_coverage}}
          echo "ut_coverage finished"
